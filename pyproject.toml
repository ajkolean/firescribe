[tool.poetry]
name = "firescribe"
version = "0.1.0"
description = "A Python project that orchestrates multiple assistants for migrating, refining, and validating narrative documents in the Firewalker book series. The project involves entity-specific schema conversions, vector store integration, and automated conflict resolution."
authors = ["Andrew Kolean <andykolean@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/your-repo/firescribe"
repository = "https://github.com/your-repo/firescribe"
keywords = ["openai", "vector store", "schema validation", "writing", "narrative", "linting", "type checking"]
packages = [
    {include = "src"}
]

[tool.poetry.dependencies]
python = "^3.10"
openai = "*"
watchdog = "*"
tiktoken = "*"
jsonschema = "*"
pydantic = "*"
pandas = "*"
rich = "*"
# Additional dependencies for file management and vector store
sqlalchemy = "*"
numpy = "*"
poetry-types = "^0.5.1"
pyyaml = "^6.0.2"
click = "^8.1.7"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
mock = "^5.1.0"

[tool.poetry.dev-dependencies]
pytest = "*"
black = "*"
flake8 = "*"
mypy = "*"
isort = "*"
pylint = "*"
# Optional but useful tools for security and formatting
bandit = "*"
pre-commit = "*"
# Runtime type checking for dynamic validation
typeguard = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.flake8]
max-line-length = 88
ignore = ["E203", "E501", "W503"]

[tool.isort]
profile = "black"

[tool.mypy]
files = "src"
ignore_missing_imports = true
python_version = "3.10"

[tool.pylint]
load-plugins = ["pylint.extensions.mccabe", "pylint.extensions.docparams"]
max-line-length = 88

[tool.bandit]
targets = ["src"]
exclude = [".venv"]

# Pre-commit configuration
[tool.pre-commit]
repos = [
    { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.3.0", hooks = [
        { id = "black" },
        { id = "flake8" },
        { id = "isort" }
    ]}
]

[tool.pyright]
typeCheckingMode = "basic"

[tool.poetry.scripts]
start = "src.main:run"

[tool.vscode]
python.pythonPath = ".venv/bin/python"