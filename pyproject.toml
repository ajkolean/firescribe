[tool.poetry]
name = "firescribe"
version = "0.1.0"
description = "A Python project for migrating, refining, and validating narrative documents."
authors = ["Andrew Kolean <andykolean@gmail.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.12.6"
openai = "*"
watchdog = "*"
tiktoken = "*"
jsonschema = "*"
pydantic = "*"
pydantic-settings = "*"
pandas = "*"
rich = "*"
sqlalchemy = "*"
numpy = "*"
pyyaml = "*"
click = "*"
logfire = "*"
poetry = "^1.8.3"

[tool.poetry.group.dev.dependencies]
isort = "*"
black = "*"
flake8 = "*"
flake8-pydantic = "*"
flake8-bugbear = "*"
flake8-docstrings = "*"
bandit = "*"
pytest = "*"
python-dotenv = "*"
pre-commit = "*"
pytest-cov = "*"
typeguard = "*"
coverage = "*"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
max-line-length = 79
ignore = ["E203", "E501", "W503"]
exclude = ["__pycache__", ".venv", "build", "dist"]


[tool.bandit]
targets = ["src"]
exclude = [".venv", "tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
